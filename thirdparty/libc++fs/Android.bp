package {
    default_applicable_licenses: ["vendor_tda_license"],
}

cc_defaults {
    name: "tda.carpc.libc++fs.defaults",
    local_include_dirs: ["include"],
    export_include_dirs: ["include"],
    cflags: [
        "-Wall",
        "-Werror",
        "-Wno-unused-parameter",
    ],
    cppflags: [
        "-std=c++17",
        "-fexceptions",
        "-DLIBCXX_BUILDING_LIBCXXABI",
        "-D_LIBCPP_BUILDING_LIBRARY",
    ],
    rtti: true,
    recovery_available: true,
    vendor: true,
}

cc_library_static {
    name: "tda.carpc.libc++fs",
    defaults: ["tda.carpc.libc++fs.defaults"],
    srcs: [
        "src/filesystem/directory_iterator.cpp",
        "src/filesystem/operations.cpp",
    ],
    multilib: {
        lib32: {
            // off_t usage is constrained to within the libc++ source (not the
            // headers), so we can build the filesystem library with a 64-bit
            // off_t on LP32 to get large file support without needing all users
            // of the library to match.
            cflags: ["-D_FILE_OFFSET_BITS=64"],
        },
    },
    target: {
        windows: {
            enabled: false,
        },
    },
}
